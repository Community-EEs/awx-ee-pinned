name: Build and Push

on:
  push:
    # build and push anytime commits are pushed/merged
    branches:
      # - devel-pinned
      - feature-renovate
  # release:
  #   # build and push upon release creation
  #   types:
  #     - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push_latest:
    runs-on: ubuntu-22.04
    name: Build and push upon merge
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Docker Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: ansible-builder create context
        working-directory: ./src
        run: ansible-builder create -v3 --context context --output-filename Dockerfile

      - name: Archive Dockerfile
        uses: actions/upload-artifact@v4
        with:
          name: Dockerfile
          path: ./src/context/Dockerfile

      # - name: Lint Dockerfile
      #   uses: hadolint/hadolint-action@v3.1.0
      #   with:
      #     dockerfile: ./src/context/Dockerfile
      #     no-fail: true

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./src/context
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
